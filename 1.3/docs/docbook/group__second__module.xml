<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__second__module">
<title>side module</title>
<indexterm><primary>side module</primary></indexterm>
<para>

<para>This function get&apos;s coefficients from wrote equation. </para>
 
</para>

<para>This function get&apos;s coefficients from wrote equation. </para>

<para><formalpara><title>Author: </title>

<para>andreevmaxi </para>
</formalpara>
<formalpara><title>Version: </title>

<para>1.3 </para>
</formalpara>
<formalpara><title>Date: </title>

<para>july 2019 year </para>
</formalpara>
<formalpara><title>Copyright: </title>

<para>korobcom</para>
</formalpara>
This is second head function in this program,</para>

<para>it&apos;s getting coefficients from printed equation by processing every symbol of it. At the end it print coefficients of this equation in a, b and c variables. 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>a</entry>
                                <entry>
<para>it&apos;s integer variable of head member(coefficient) of equation which used in solve_square_equation function </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>b</entry>
                                <entry>
<para>it&apos;s integer variable of second member(coefficient) of equation which used in solve_square_equation function </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>c</entry>
                                <entry>
<para>it&apos;s integer variable of free member(coefficient) of equation which used in solve_square_equation function </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>user_equation</entry>
                                <entry>
<para>vector of chars which first it contains answer of user about want he to write equation by yourself or just coefficients second it&apos;s used in input of user&apos;s equations(after deleting information about previous user answer) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>tmp</entry>
                                <entry>
<para>it&apos;s temperary char variable which used in inputing user_equation and than in processing of user_equation </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns: </title>

<para>If this function return char &apos;k&apos;, than everything is OK!</para>
</formalpara>
<literallayout><computeroutput>char&#32;PrintEquation(int*&#32;a,&#32;int*&#32;b,&#32;int*&#32;c){
&#32;&#32;&#32;&#32;assert(a&#32;!=&#32;NULL);
&#32;&#32;&#32;&#32;assert(b&#32;!=&#32;NULL);
&#32;&#32;&#32;&#32;assert(c&#32;!=&#32;NULL);

&#32;&#32;&#32;&#32;int&#32;i&#32;=&#32;0;
&#32;&#32;&#32;&#32;int&#32;tmp_coefficient&#32;=&#32;0;
&#32;&#32;&#32;&#32;bool&#32;sign_flag&#32;=&#32;0;
&#32;&#32;&#32;&#32;vector&#32;&lt;char&gt;&#32;user_equation;
&#32;&#32;&#32;&#32;char&#32;tmp&#32;=&#32;&apos;&#32;&apos;;

&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;&quot;Do&#32;you&#32;want&#32;to&#32;write&#32;your&#32;equation&#32;by&#32;yourself?{YES/NO}&quot;&#32;&lt;&lt;&#32;endl;

&#32;&#32;&#32;&#32;cin.sync();
&#32;&#32;&#32;&#32;while(cin.get(tmp))&#32;{

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user_equation.push_back(tmp);

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(tmp&#32;==&#32;&apos;\n&apos;){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;if&#32;(user_equation[0]&#32;!=&#32;&apos;Y&apos;&#32;||&#32;user_equation[1]&#32;!=&#32;&apos;E&apos;&#32;||&#32;user_equation[2]&#32;!=&#32;&apos;S&apos;)
&#32;&#32;&#32;&#32;{

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;&quot;Write&#32;down&#32;coefficients&#32;of&#32;your&#32;equation&quot;&#32;&lt;&lt;&#32;endl;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cin&#32;&gt;&gt;&#32;*a&#32;&gt;&gt;&#32;*b&#32;&gt;&gt;&#32;*c;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;&apos;k&apos;;
&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;user_equation.resize(0);

&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;&quot;Now&#32;write&#32;your&#32;equation;&#32;example:&#32;34x^2-51*x&#32;+&#32;13213+24x^2=&#32;0&quot;&#32;&lt;&lt;&#32;endl;

&#32;&#32;&#32;&#32;cin.sync();
&#32;&#32;&#32;&#32;while(cin.get(tmp))&#32;{

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(tmp&#32;==&#32;&apos;X&apos;){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp&#32;-&#32;&apos;A&apos;&#32;+&#32;&apos;a&apos;;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user_equation.push_back(tmp);

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(tmp&#32;==&#32;&apos;\n&apos;){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;tmp&#32;=&#32;&apos;&#32;&apos;;

&#32;&#32;&#32;&#32;tmp&#32;=&#32;user_equation[i];

&#32;&#32;&#32;&#32;while(tmp!=&apos;=&apos;&#32;&amp;&amp;&#32;tmp!=&apos;\n&apos;)
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(tmp&#32;!=&#32;&apos;&#32;&apos;&#32;&amp;&amp;&#32;tmp&#32;!=&#32;&apos;+&apos;&#32;&amp;&amp;&#32;tmp&#32;!=&#32;&apos;-&apos;)
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(tmp&#32;!=&#32;&apos;x&apos;&#32;&amp;&amp;&#32;tmp&#32;!=&#32;&apos;*&apos;)
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;tmp_coefficient*10&#32;+&#32;(tmp&#32;-&#32;&apos;0&apos;);

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;else&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(tmp_coefficient&#32;==&#32;0){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++tmp_coefficient;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(tmp&#32;==&#32;&apos;*&apos;){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(user_equation[i+1]&#32;==&#32;&apos;^&apos;){

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(sign_flag&#32;==&#32;0){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*a&#32;+=&#32;tmp_coefficient;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;else
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*a&#32;-=&#32;tmp_coefficient;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;0;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;2;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;0;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}else
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(sign_flag&#32;==&#32;0){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*b&#32;+=&#32;tmp_coefficient;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;else
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*b&#32;-=&#32;tmp_coefficient;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;0;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;0;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}else
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(tmp_coefficient&#32;!=&#32;0){

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(sign_flag&#32;==&#32;0){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*c&#32;+=&#32;tmp_coefficient;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;else
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*c&#32;-=&#32;tmp_coefficient;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;0;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;0;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(tmp&#32;==&#32;&apos;-&apos;){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;1;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;++i;
&#32;&#32;&#32;&#32;tmp&#32;=&#32;user_equation[i];

&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;if&#32;(tmp_coefficient!=0){

&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(sign_flag&#32;==&#32;0){
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*c&#32;+=&#32;tmp_coefficient;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;else&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*c&#32;-=&#32;tmp_coefficient;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;}

&#32;&#32;&#32;&#32;return&#32;&apos;k&apos;;//where&#32;is&#32;k&#32;==&#32;ok

}
</computeroutput></literallayout> </para>
</section>
