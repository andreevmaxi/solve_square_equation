<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_solve__square__equation_8cpp">
<title>C:/Users/Maksim/Desktop/homework/solve_square_equation/solve_square_equation.cpp File Reference</title>
<indexterm><primary>C:/Users/Maksim/Desktop/homework/solve_square_equation/solve_square_equation.cpp</primary></indexterm>
<programlisting>#include &lt;iostream&gt;
#include &lt;cmath&gt;
#include &lt;float.h&gt;
#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;cassert&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>char <link linkend="_solve__square__equation_8cpp_1a110cb7d04bfec5cde5b30830035c78c2">SolveSquareEquation</link> (int <link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>, int <link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>, int <link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>, double *<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>, double *<link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link>)</para>
</listitem>
            <listitem><para>char <link linkend="_solve__square__equation_8cpp_1a4c75f85f520f2117cb677c5db23fe588">PrintEquation</link> (int *<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>, int *<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>, int *<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_solve__square__equation_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link> = 0</para>
</listitem>
            <listitem><para>double <link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link> = NAN</para>
</listitem>
            <listitem><para>double <link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link> = NAN</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_solve__square__equation_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para>
<para>processing of solution of square equation</para>

<para>indicates that equation hasn&apos;t got any roots</para>

<para>indicates that equation has only one root</para>

<para>indicates that equation has two root</para>

<para>indicates that equation has infinite number of roots </para>
<programlisting>70 {
71 &#32;&#32;&#32;&#32;<link linkend="_solve__square__equation_8cpp_1a4c75f85f520f2117cb677c5db23fe588">PrintEquation</link>(&amp;<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>,&#32;&amp;<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>,&#32;&amp;<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>);
73 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_solve__square__equation_8cpp_1a110cb7d04bfec5cde5b30830035c78c2">SolveSquareEquation</link>(<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>,<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>,<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>,&amp;<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>,&amp;<link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link>))
74 &#32;&#32;&#32;&#32;{
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>:&#32;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;this&#32;equation&#32;hasn&apos;t&#32;got&#32;any&#32;roots&#32;(sorry,&#32;but&#32;it&apos;s&#32;true)&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;thanks&#32;for&#32;using&#32;this&#32;program&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>:&#32;
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;the&#32;only&#32;one&#32;root&#32;that&#32;has&#32;this&#32;equation&#32;is:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;thanks&#32;for&#32;using&#32;this&#32;program&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;2&apos;</emphasis>:&#32;
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Yep,&#32;we&#32;did&#32;it,&#32;first&#32;root&#32;that&#32;has&#32;this&#32;equation&#32;is:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>&#32;&lt;&lt;&#32;std::endl&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;while&#32;the&#32;second&#32;root&#32;is:&#32;&quot;</emphasis>&#32;&#32;&lt;&lt;&#32;<link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link>&#32;&lt;&lt;
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::endl&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;thanks&#32;for&#32;using&#32;this&#32;program&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;i&apos;</emphasis>:&#32;
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;your&#32;equation&#32;has&#32;infinite&#32;number&#32;of&#32;roots&#32;(like&#32;your&#32;iq)&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;thanks&#32;for&#32;using&#32;this&#32;program&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
96 &#32;&#32;&#32;&#32;}
97 }
</programlisting>    </section><anchor xml:id="_solve__square__equation_8cpp_1a4c75f85f520f2117cb677c5db23fe588"/>    <section>
    <title>PrintEquation()</title>
<indexterm><primary>PrintEquation</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>PrintEquation</secondary></indexterm>
<para><computeroutput>char PrintEquation (int * a, int * b, int * c)</computeroutput></para><programlisting>386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
387 &#32;&#32;&#32;&#32;assert(<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>&#32;!=&#32;NULL);
388 &#32;&#32;&#32;&#32;assert(<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;!=&#32;NULL);
389 &#32;&#32;&#32;&#32;assert(<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;!=&#32;NULL);
390 
391 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
392 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tmp_coefficient&#32;=&#32;0;
393 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;sign_flag&#32;=&#32;0;
394 &#32;&#32;&#32;&#32;std::vector&#32;&lt;char&gt;&#32;user_equation;
395 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;tmp&#32;=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>;
396 
397 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Do&#32;you&#32;want&#32;to&#32;write&#32;your&#32;equation&#32;by&#32;yourself?{YES/NO}&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
398 
399 &#32;&#32;&#32;&#32;std::cin.sync();
400 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(std::cin.get(tmp))&#32;{
401 
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user_equation.push_back(tmp);
403 
404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>){
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
407 
408 &#32;&#32;&#32;&#32;}
409 
410 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(user_equation[0]&#32;!=&#32;<emphasis role="charliteral">&apos;Y&apos;</emphasis>&#32;||&#32;user_equation[1]&#32;!=&#32;<emphasis role="charliteral">&apos;E&apos;</emphasis>&#32;||&#32;user_equation[2]&#32;!=&#32;<emphasis role="charliteral">&apos;S&apos;</emphasis>)
411 &#32;&#32;&#32;&#32;{
412 
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Write&#32;down&#32;coefficients&#32;of&#32;your&#32;equation&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cin&#32;&gt;&gt;&#32;*<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>&#32;&gt;&gt;&#32;*<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;&gt;&gt;&#32;*<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>;
415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;k&apos;</emphasis>;
416 &#32;&#32;&#32;&#32;}
417 
418 &#32;&#32;&#32;&#32;user_equation.resize(0);
419 
420 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Now&#32;write&#32;your&#32;equation;&#32;example:&#32;34x^2-51*x&#32;+&#32;13213+24x^2=&#32;0&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
421 
422 &#32;&#32;&#32;&#32;std::cin.sync();
423 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(std::cin.get(tmp))&#32;{
424 
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;<emphasis role="charliteral">&apos;X&apos;</emphasis>){
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp&#32;-&#32;<emphasis role="charliteral">&apos;A&apos;</emphasis>&#32;+&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>;
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
428 
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user_equation.push_back(tmp);
430 
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>){
432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
434 
435 &#32;&#32;&#32;&#32;}
436 
437 &#32;&#32;&#32;&#32;tmp&#32;=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>;
438 
439 &#32;&#32;&#32;&#32;tmp&#32;=&#32;user_equation[i];
440 
441 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(tmp!=<emphasis role="charliteral">&apos;=&apos;</emphasis>&#32;&amp;&amp;&#32;tmp!=<emphasis role="charliteral">&apos;\n&apos;</emphasis>)
442 &#32;&#32;&#32;&#32;{
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(tmp&#32;!=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>&#32;&amp;&amp;&#32;tmp&#32;!=&#32;<emphasis role="charliteral">&apos;+&apos;</emphasis>&#32;&amp;&amp;&#32;tmp&#32;!=&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(tmp&#32;!=&#32;<emphasis role="charliteral">&apos;x&apos;</emphasis>&#32;&amp;&amp;&#32;tmp&#32;!=&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>)
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;tmp_coefficient*10&#32;+&#32;(tmp&#32;-&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>);
448 
449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(tmp_coefficient&#32;==&#32;0){
451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++tmp_coefficient;
452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(tmp&#32;==&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>){
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
456 
457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(user_equation[i+1]&#32;==&#32;<emphasis role="charliteral">&apos;^&apos;</emphasis>){
458 
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sign_flag&#32;==&#32;0){
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>&#32;+=&#32;tmp_coefficient;
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>&#32;-=&#32;tmp_coefficient;
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
465 
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;0;
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;2;
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;0;
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sign_flag&#32;==&#32;0){
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;+=&#32;tmp_coefficient;
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;-=&#32;tmp_coefficient;
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
477 
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;0;
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;0;
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
481 
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp_coefficient&#32;!=&#32;0){
486 
487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sign_flag&#32;==&#32;0){
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;+=&#32;tmp_coefficient;
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;-=&#32;tmp_coefficient;
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
493 
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;0;
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;0;
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
497 
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>){
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;1;
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
501 
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
503 
504 &#32;&#32;&#32;&#32;++i;
505 &#32;&#32;&#32;&#32;tmp&#32;=&#32;user_equation[i];
506 
507 &#32;&#32;&#32;&#32;}
508 
509 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp_coefficient!=0){
510 
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(sign_flag&#32;==&#32;0){
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;+=&#32;tmp_coefficient;
513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;-=&#32;tmp_coefficient;
515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
516 
517 &#32;&#32;&#32;&#32;}
518 
519 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;k&apos;</emphasis>;<emphasis role="comment">//where&#32;is&#32;k&#32;==&#32;ok</emphasis>
520 
521 }
</programlisting>    </section><anchor xml:id="_solve__square__equation_8cpp_1a110cb7d04bfec5cde5b30830035c78c2"/>    <section>
    <title>SolveSquareEquation()</title>
<indexterm><primary>SolveSquareEquation</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>SolveSquareEquation</secondary></indexterm>
<para><computeroutput>char SolveSquareEquation (int a, int b, int c, double * x1, double * x2)</computeroutput></para>
<para>variable used for calculate discriminate of square equation </para>
<programlisting>178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
179 &#32;&#32;&#32;&#32;assert(<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>&#32;!=&#32;NULL);
180 &#32;&#32;&#32;&#32;assert(<link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link>&#32;!=&#32;NULL);
181 
182 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>)
183 &#32;&#32;&#32;&#32;{
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;==&#32;0&#32;&amp;&amp;&#32;<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;==&#32;0){
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;i&apos;</emphasis>;
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;==&#32;0&#32;&amp;&amp;&#32;<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;!=&#32;0){
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>;
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>=-<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>/<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>;
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>;
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;discriminate&#32;=&#32;0;&#32;
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;discriminate&#32;=&#32;<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;*&#32;<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;-&#32;4&#32;*&#32;<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>&#32;*&#32;<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>;
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;discriminate&#32;&gt;=&#32;0&#32;)
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>&#32;=&#32;(-&#32;<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;-&#32;sqrt(&#32;discriminate&#32;)&#32;)/(2&#32;*&#32;<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>);
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link>&#32;=&#32;(-&#32;<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;+&#32;sqrt(&#32;discriminate&#32;)&#32;)/(2&#32;*&#32;<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>);
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link>&#32;-&#32;<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>&#32;&lt;&#32;0.0001&#32;)
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>;
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;2&apos;</emphasis>;
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>;
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
215 
216 &#32;&#32;&#32;&#32;}
217 
218 }
</programlisting></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74"/>    <section>
    <title>a</title>
<indexterm><primary>a</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>a</secondary></indexterm>
<para><computeroutput>int a = 0</computeroutput></para>    </section><anchor xml:id="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9"/>    <section>
    <title>b</title>
<indexterm><primary>b</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>b</secondary></indexterm>
<para><computeroutput>int b = 0</computeroutput></para>    </section><anchor xml:id="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3"/>    <section>
    <title>c</title>
<indexterm><primary>c</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>c</secondary></indexterm>
<para><computeroutput>int c = 0</computeroutput></para>    </section><anchor xml:id="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f"/>    <section>
    <title>x1</title>
<indexterm><primary>x1</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>x1</secondary></indexterm>
<para><computeroutput>double x1 = NAN</computeroutput></para>    </section><anchor xml:id="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d"/>    <section>
    <title>x2</title>
<indexterm><primary>x2</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>x2</secondary></indexterm>
<para><computeroutput>double x2 = NAN</computeroutput></para></section>
</section>
</section>
