<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_solve__square__equation_8cpp">
<title>C:/Users/Maksim/Desktop/homework/solve_square_equation/solve_square_equation.cpp File Reference</title>
<indexterm><primary>C:/Users/Maksim/Desktop/homework/solve_square_equation/solve_square_equation.cpp</primary></indexterm>
<programlisting>#include &lt;iostream&gt;
#include &lt;cmath&gt;
#include &lt;float.h&gt;
#include &lt;string&gt;
#include &lt;vector&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>char <link linkend="_solve__square__equation_8cpp_1a21cce51f73d74da84ef1bc37984b99fa">solve_square_equation</link> (int <link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>, int <link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>, int <link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>, double *<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>, double *<link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link>)</para>
</listitem>
            <listitem><para>char <link linkend="_solve__square__equation_8cpp_1ace45c5fc728f4519559178cb596e0f6f">print_equation</link> (int *<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>, int *<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>, int *<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_solve__square__equation_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link> = 0</para>
</listitem>
            <listitem><para>double <link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link> = NAN</para>
</listitem>
            <listitem><para>double <link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link> = NAN</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_solve__square__equation_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para>
<para>processing of solution of square equation</para>

<para>indicates that equation hasn&apos;t got any roots</para>

<para>indicates that equation has only one root</para>

<para>indicates that equation has two root</para>

<para>indicates that equation has infinite number of roots </para>
<programlisting>479 {
480 &#32;&#32;&#32;&#32;<link linkend="_solve__square__equation_8cpp_1ace45c5fc728f4519559178cb596e0f6f">print_equation</link>(&amp;<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>,&#32;&amp;<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>,&#32;&amp;<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>);
482 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_solve__square__equation_8cpp_1a21cce51f73d74da84ef1bc37984b99fa">solve_square_equation</link>(<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>,<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>,<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>,&amp;<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>,&amp;<link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link>))
483 &#32;&#32;&#32;&#32;{
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>:&#32;
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;this&#32;equation&#32;hasn&apos;t&#32;got&#32;any&#32;roots&#32;(sorry,&#32;but&#32;it&apos;s&#32;true)&quot;</emphasis>&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;thanks&#32;for&#32;using&#32;this&#32;program&quot;</emphasis>&#32;&lt;&lt;&#32;endl;
487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>:&#32;
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;the&#32;only&#32;one&#32;root&#32;that&#32;has&#32;this&#32;equation&#32;is:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;thanks&#32;for&#32;using&#32;this&#32;program&quot;</emphasis>&#32;&lt;&lt;&#32;endl;
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;2&apos;</emphasis>:&#32;
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Yep,&#32;we&#32;did&#32;it,&#32;first&#32;root&#32;that&#32;has&#32;this&#32;equation&#32;is:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>&#32;&lt;&lt;&#32;endl&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;while&#32;the&#32;second&#32;root&#32;is:&#32;&quot;</emphasis>&#32;&#32;&lt;&lt;&#32;<link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link>&#32;&lt;&lt;
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endl&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;thanks&#32;for&#32;using&#32;this&#32;program&quot;</emphasis>&#32;&lt;&lt;&#32;endl;
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;i&apos;</emphasis>:&#32;
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;your&#32;equation&#32;has&#32;infinite&#32;number&#32;of&#32;roots&#32;(like&#32;your&#32;iq)&quot;</emphasis>&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;endl&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;thanks&#32;for&#32;using&#32;this&#32;program&quot;</emphasis>&#32;&lt;&lt;&#32;endl;
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
505 &#32;&#32;&#32;&#32;}
506 }
</programlisting>    </section><anchor xml:id="_solve__square__equation_8cpp_1ace45c5fc728f4519559178cb596e0f6f"/>    <section>
    <title>print_equation()</title>
<indexterm><primary>print_equation</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>print_equation</secondary></indexterm>
<para><computeroutput>char print_equation (int * a, int * b, int * c)</computeroutput></para><programlisting>293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
294 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
295 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tmp_coefficient&#32;=&#32;0;
296 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;sign_flag&#32;=&#32;0;
297 &#32;&#32;&#32;&#32;vector&#32;&lt;char&gt;&#32;user_equation;
298 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;tmp&#32;=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>;
299 
300 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Do&#32;you&#32;want&#32;to&#32;write&#32;your&#32;equation&#32;by&#32;yourself?{YES/NO}&quot;</emphasis>&#32;&lt;&lt;&#32;endl;
301 
302 &#32;&#32;&#32;&#32;cin.sync();
303 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(cin.get(tmp))&#32;{
304 
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user_equation.push_back(tmp);
306 
307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>){
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
310 
311 &#32;&#32;&#32;&#32;}
312 
313 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(user_equation[0]&#32;!=&#32;<emphasis role="charliteral">&apos;Y&apos;</emphasis>&#32;||&#32;user_equation[1]&#32;!=&#32;<emphasis role="charliteral">&apos;E&apos;</emphasis>&#32;||&#32;user_equation[2]&#32;!=&#32;<emphasis role="charliteral">&apos;S&apos;</emphasis>)
314 &#32;&#32;&#32;&#32;{
315 
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Write&#32;down&#32;coefficients&#32;of&#32;your&#32;equation&quot;</emphasis>&#32;&lt;&lt;&#32;endl;
317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cin&#32;&gt;&gt;&#32;*<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>&#32;&gt;&gt;&#32;*<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;&gt;&gt;&#32;*<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>;
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;k&apos;</emphasis>;
319 &#32;&#32;&#32;&#32;}
320 
321 &#32;&#32;&#32;&#32;user_equation.resize(0);
322 
323 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Now&#32;write&#32;your&#32;equation;&#32;example:&#32;34x^2-51*x&#32;+&#32;13213+24x^2=&#32;0&quot;</emphasis>&#32;&lt;&lt;&#32;endl;
324 
325 &#32;&#32;&#32;&#32;cin.sync();
326 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(cin.get(tmp))&#32;{
327 
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;<emphasis role="charliteral">&apos;X&apos;</emphasis>){
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp&#32;-&#32;<emphasis role="charliteral">&apos;A&apos;</emphasis>&#32;+&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>;
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
331 
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user_equation.push_back(tmp);
333 
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>){
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
337 
338 &#32;&#32;&#32;&#32;}
339 
340 &#32;&#32;&#32;&#32;tmp&#32;=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>;
341 
342 &#32;&#32;&#32;&#32;tmp&#32;=&#32;user_equation[i];
343 
344 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(tmp!=<emphasis role="charliteral">&apos;=&apos;</emphasis>&#32;&amp;&amp;&#32;tmp!=<emphasis role="charliteral">&apos;\n&apos;</emphasis>)
345 &#32;&#32;&#32;&#32;{
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(tmp&#32;!=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>&#32;&amp;&amp;&#32;tmp&#32;!=&#32;<emphasis role="charliteral">&apos;+&apos;</emphasis>&#32;&amp;&amp;&#32;tmp&#32;!=&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(tmp&#32;!=&#32;<emphasis role="charliteral">&apos;x&apos;</emphasis>&#32;&amp;&amp;&#32;tmp&#32;!=&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>)
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;tmp_coefficient*10&#32;+&#32;(tmp&#32;-&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>);
351 
352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(tmp_coefficient&#32;==&#32;0){
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++tmp_coefficient;
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(tmp&#32;==&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>){
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
359 
360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(user_equation[i+1]&#32;==&#32;<emphasis role="charliteral">&apos;^&apos;</emphasis>){
361 
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sign_flag&#32;==&#32;0){
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>&#32;+=&#32;tmp_coefficient;
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>&#32;-=&#32;tmp_coefficient;
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
368 
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;0;
370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;2;
371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;0;
372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sign_flag&#32;==&#32;0){
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;+=&#32;tmp_coefficient;
376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;-=&#32;tmp_coefficient;
379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
380 
381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;0;
382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;0;
383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
384 
385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<emphasis role="keywordflow">else</emphasis>
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp_coefficient&#32;!=&#32;0){
389 
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sign_flag&#32;==&#32;0){
391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;+=&#32;tmp_coefficient;
392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;-=&#32;tmp_coefficient;
395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
396 
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;0;
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp_coefficient&#32;=&#32;0;
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
400 
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>){
402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sign_flag&#32;=&#32;1;
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
404 
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
406 
407 &#32;&#32;&#32;&#32;++i;
408 &#32;&#32;&#32;&#32;tmp&#32;=&#32;user_equation[i];
409 
410 &#32;&#32;&#32;&#32;}
411 
412 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp_coefficient!=0){
413 
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(sign_flag&#32;==&#32;0){
415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;+=&#32;tmp_coefficient;
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;-=&#32;tmp_coefficient;
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
419 
420 &#32;&#32;&#32;&#32;}
421 
422 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;k&apos;</emphasis>;<emphasis role="comment">//where&#32;is&#32;k&#32;==&#32;ok</emphasis>
423 
424 }
</programlisting>    </section><anchor xml:id="_solve__square__equation_8cpp_1a21cce51f73d74da84ef1bc37984b99fa"/>    <section>
    <title>solve_square_equation()</title>
<indexterm><primary>solve_square_equation</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>solve_square_equation</secondary></indexterm>
<para><computeroutput>char solve_square_equation (int a, int b, int c, double * x1, double * x2)</computeroutput></para>
<para>variable used for calculate discriminate of square equation </para>
<programlisting>91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
92 
93 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>)
94 &#32;&#32;&#32;&#32;{
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;==&#32;0&#32;&amp;&amp;&#32;<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;==&#32;0){
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;i&apos;</emphasis>;
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;==&#32;0&#32;&amp;&amp;&#32;<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>&#32;!=&#32;0){
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>;
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>=-<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>/<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>;
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>;
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;discriminate&#32;=&#32;0;&#32;
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;discriminate&#32;=&#32;<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;*&#32;<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;-&#32;4&#32;*&#32;<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>&#32;*&#32;<link linkend="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3">c</link>;
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;discriminate&#32;&gt;=&#32;0&#32;)
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f">x1</link>&#32;=&#32;(-&#32;<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;-&#32;sqrt(&#32;discriminate&#32;)&#32;)/(2&#32;*&#32;<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>);
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d">x2</link>&#32;=&#32;(-&#32;<link linkend="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9">b</link>&#32;+&#32;sqrt(&#32;discriminate&#32;)&#32;)/(2&#32;*&#32;<link linkend="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74">a</link>);
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;discriminate&#32;==&#32;0)
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>;
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;2&apos;</emphasis>;
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>;
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
126 
127 &#32;&#32;&#32;&#32;}
128 
129 }
</programlisting></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_solve__square__equation_8cpp_1aa4c2a5552e9bc49b1816ff532f558c74"/>    <section>
    <title>a</title>
<indexterm><primary>a</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>a</secondary></indexterm>
<para><computeroutput>int a = 0</computeroutput></para>    </section><anchor xml:id="_solve__square__equation_8cpp_1a148e3876077787926724625411d6e7a9"/>    <section>
    <title>b</title>
<indexterm><primary>b</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>b</secondary></indexterm>
<para><computeroutput>int b = 0</computeroutput></para>    </section><anchor xml:id="_solve__square__equation_8cpp_1a4e1e0e72dd773439e333c84dd762a9c3"/>    <section>
    <title>c</title>
<indexterm><primary>c</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>c</secondary></indexterm>
<para><computeroutput>int c = 0</computeroutput></para>    </section><anchor xml:id="_solve__square__equation_8cpp_1ac75b803b570527306e1e744bfb7a604f"/>    <section>
    <title>x1</title>
<indexterm><primary>x1</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>x1</secondary></indexterm>
<para><computeroutput>double x1 = NAN</computeroutput></para>    </section><anchor xml:id="_solve__square__equation_8cpp_1adcf04f5f1964d18b332643939561da0d"/>    <section>
    <title>x2</title>
<indexterm><primary>x2</primary><secondary>solve_square_equation.cpp</secondary></indexterm>
<indexterm><primary>solve_square_equation.cpp</primary><secondary>x2</secondary></indexterm>
<para><computeroutput>double x2 = NAN</computeroutput></para></section>
</section>
</section>
